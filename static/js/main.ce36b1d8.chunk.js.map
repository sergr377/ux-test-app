{"version":3,"sources":["components/MainPage/Content/Content.module.css","components/Navbar/Navbar.module.css","components/EmptyPage/EmptyPage.module.css","components/MainPage/MainPage.module.css","components/Footer/Footer.module.css","App.module.css","images/Illustration - Архитектура.png","images/Illustration - Благоустройство.png","images/IllustrationMask - Безопастность.jpg","images/Illustration - Инженерия.png","images/Illustration - Инфраструктура.png","images/Illustration - Транспортная доступность.png","components/MainPage/Content/Architecture.jsx","components/MainPage/Content/Improvement.jsx","components/MainPage/Content/Security.jsx","components/Navbar/Navbar.jsx","components/Footer/Footer.jsx","components/EmptyPage/EmptyPage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Architecture","className","s","mainPage","menu","CSSTransition","in","timeout","classNames","enterDone","exit","exitActive","exitDone","appear","navLink","to","mainContent","appearActive","enter","enterActive","content","title","description","illustration","src","newPic","Improvement","newsPic","Security","cx","bind","Navbar","id","useParams","underline","navbar","logo","backgroundBlock","navLinkLogo","navbuttonCenter","iconBurger","shape1","shape2","Footer","footer","footerText","App","appBlock","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ce36b1d8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainPage\":\"Content_mainPage__1-Y3_\",\"menu\":\"Content_menu__1jF-u\",\"mainContent\":\"Content_mainContent__Qr1Xs\",\"content\":\"Content_content__yI-RS\",\"title\":\"Content_title__3hQlu\",\"description\":\"Content_description__nw4ip\",\"navLink\":\"Content_navLink__3XQLd\",\"activeLink\":\"Content_activeLink__2oxNj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1OKEJ\",\"navbuttonCenter\":\"Navbar_navbuttonCenter__34kko\",\"navLink\":\"Navbar_navLink__2ZsHi\",\"navLinkLogo\":\"Navbar_navLinkLogo__1dzb5\",\"backgroundBlock\":\"Navbar_backgroundBlock__29CL5\",\"iconBurger\":\"Navbar_iconBurger__2chf5\",\"shape1\":\"Navbar_shape1__APuef\",\"shape2\":\"Navbar_shape2__2s9aY\",\"logo\":\"Navbar_logo__8DKk4\",\"underline\":\"Navbar_underline__xhpoI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"emptyPage1\":\"EmptyPage_emptyPage1__3pyEm\",\"emptyPage2\":\"EmptyPage_emptyPage2__Sdh0E\",\"emptyPage3\":\"EmptyPage_emptyPage3__2aGg8\",\"id\":\"EmptyPage_id__uO2S_\",\"button\":\"EmptyPage_button__1rYJs\",\"canvasField\":\"EmptyPage_canvasField__37TbL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainPage\":\"MainPage_mainPage__1DFAf\",\"menu\":\"MainPage_menu__390js\",\"mainContent\":\"MainPage_mainContent__1h-qj\",\"content\":\"MainPage_content__Mc_Mg\",\"navLink\":\"MainPage_navLink__LpMQg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__21v6s\",\"footerText\":\"Footer_footerText__1SuDd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appBlock\":\"App_appBlock__1mvc3\"};","module.exports = __webpack_public_path__ + \"static/media/Illustration - Архитектура.f8fbd174.png\";","module.exports = __webpack_public_path__ + \"static/media/Illustration - Благоустройство.5ec80abc.png\";","module.exports = __webpack_public_path__ + \"static/media/IllustrationMask - Безопастность.66672302.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Illustration - Инженерия.d1e41d87.png\";","module.exports = __webpack_public_path__ + \"static/media/Illustration - Инфраструктура.e9740cd0.png\";","module.exports = __webpack_public_path__ + \"static/media/Illustration - Транспортная доступность.8a068012.png\";","import React from 'react';\r\nimport s from './Content.module.css';\r\nimport newPic from '../../../images/Illustration - Архитектура.png'\r\nimport { Link } from \"react-router-dom\"\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport \"./../../../styles.css\";\r\n\r\nexport default function Architecture() {\r\n\r\n    return (\r\n        <div className={s.mainPage}>\r\n            <div className={s.menu}>\r\n                <ul>\r\n                    <li>\r\n                        <CSSTransition\r\n                            in={true}\r\n                            timeout={0}\r\n                            classNames={{\r\n                                enterDone: 'menu-done-enter',\r\n                                exit: 'menu-exit',\r\n                                exitActive: 'menu-active-exit',\r\n                                exitDone: 'menu-done-exit',\r\n                            }}\r\n                            appear\r\n                        ><Link className={s.navLink} to={'/architecture'}>Архитектура</Link>\r\n                        </CSSTransition>\r\n                    </li>\r\n                    <li><Link className={s.navLink} to={'/improvement'}>Благоустройство</Link></li>\r\n                    <li><Link className={s.navLink} to={'/security'}>Безопасность</Link></li>\r\n                    <li><Link className={s.navLink} to={'/engineering'}>Инженерия</Link></li>\r\n                    <li><Link className={s.navLink} to={'/infrastructure'}>Инфраструктура</Link></li>\r\n                    <li><Link className={s.navLink} to={'/accessibility'}>Транспортная доступность</Link></li>\r\n                </ul>\r\n            </div>\r\n            <div className={s.mainContent}>\r\n                <CSSTransition\r\n                    in={true}\r\n                    timeout={1000}\r\n                    classNames={{\r\n                        appear: 'content-appear',\r\n                        appearActive: 'content-active-appear',\r\n                        enter: 'content-enter',\r\n                        enterActive: 'content-active-enter',\r\n                    }}\r\n                    appear>\r\n                    <div className={s.content}>\r\n                        <h1 className={s.title}>Архитектура</h1>\r\n                        <p className={s.description}>Оригинальная архитектура жилого комплекса бизнес-класса «Первомайская» формирует современный стиль жизни</p>\r\n                    </div>\r\n                </CSSTransition>\r\n            </div>\r\n            <div className={s.illustration}>\r\n                <CSSTransition\r\n                    in={true}\r\n                    timeout={1000}\r\n                    classNames={{\r\n                        appear: 'illustration-appear',\r\n                        appearActive: 'illustration-active-appear',\r\n                        enter: 'illustration-enter',\r\n                        enterActive: 'illustration-active-enter',\r\n                    }}\r\n                    appear>\r\n                    <img src={newPic}></img>\r\n                </CSSTransition>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Content.module.css';\r\nimport newsPic from '../../../images/Illustration - Благоустройство.png'\r\nimport { Link } from \"react-router-dom\"\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport \"./../../../styles.css\";\r\n\r\n\r\nexport default function Improvement() {\r\n\r\n    return (\r\n        <div className={s.mainPage}>\r\n            <div className={s.menu}>\r\n                <ul>\r\n                    <li><Link className={s.navLink} to={'/architecture'}>Архитектура</Link></li>\r\n                    <li>\r\n                        <CSSTransition\r\n                            in={true}\r\n                            timeout={0}\r\n                            classNames={{\r\n                                enterDone: 'menu-done-enter',\r\n                                exit: 'menu-exit',\r\n                                exitActive: 'menu-active-exit',\r\n                                exitDone: 'menu-done-exit',\r\n                            }}\r\n                            appear\r\n                        ><Link className={s.navLink} to={'/improvement'}>Благоустройство</Link>\r\n                        </CSSTransition>\r\n                    </li>\r\n                    <li><Link className={s.navLink} to={'/security'}>Безопасность</Link></li>\r\n                    <li><Link className={s.navLink} to={'/engineering'}>Инженерия</Link></li>\r\n                    <li><Link className={s.navLink} to={'/infrastructure'}>Инфраструктура</Link></li>\r\n                    <li><Link className={s.navLink} to={'/accessibility'}>Транспортная доступность</Link></li>\r\n                </ul>\r\n            </div>\r\n            <div className={s.mainContent}>\r\n                <CSSTransition\r\n                    in={true}\r\n                    timeout={1000}\r\n                    classNames={{\r\n                        appear: 'content-appear',\r\n                        appearActive: 'content-active-appear',\r\n                        enter: 'content-enter',\r\n                        enterActive: 'content-active-enter',\r\n                    }}\r\n                    appear>\r\n                    <div className={s.content}>\r\n                        <h1 className={s.title}>Благоустройство</h1>\r\n                        <p className={s.description}>Запроектированные большие окна, которые пропускают много солнечного света, наполнят Ваши квартиры теплотой и уютом</p>\r\n                    </div>\r\n                </CSSTransition>\r\n            </div>\r\n            <div className={s.illustration}>\r\n                <CSSTransition\r\n                    in={true}\r\n                    timeout={1000}\r\n                    classNames={{\r\n                        appear: 'illustration-appear',\r\n                        appearActive: 'illustration-active-appear',\r\n                        enter: 'illustration-enter',\r\n                        enterActive: 'illustration-active-enter',\r\n                    }}\r\n                    appear>\r\n                    <img src={newsPic}></img>\r\n                </CSSTransition>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Content.module.css';\r\nimport newsPic from '../../../images/IllustrationMask - Безопастность.jpg'\r\nimport { Link } from \"react-router-dom\"\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport \"./../../../styles.css\";\r\n\r\nexport default function Security() {\r\n\r\n    return (\r\n        <div className={s.mainPage}>\r\n            <div className={s.menu}>\r\n                <ul>\r\n                    <li><Link className={s.navLink} to={'/architecture'}>Архитектура</Link></li>\r\n                    <li><Link className={s.navLink} to={'/improvement'}>Благоустройство</Link></li>\r\n                    <li>\r\n                        <CSSTransition\r\n                            in={true}\r\n                            timeout={0}\r\n                            classNames={{\r\n                                enterDone: 'menu-done-enter',\r\n                                exit: 'menu-exit',\r\n                                exitActive: 'menu-active-exit',\r\n                                exitDone: 'menu-done-exit',\r\n                            }}\r\n                            appear\r\n                        ><Link className={s.navLink} to={'/security'}>Безопасность</Link>\r\n                        </CSSTransition>\r\n                    </li>\r\n                    <li><Link className={s.navLink} to={'/engineering'}>Инженерия</Link></li>\r\n                    <li><Link className={s.navLink} to={'/infrastructure'}>Инфраструктура</Link></li>\r\n                    <li><Link className={s.navLink} to={'/accessibility'}>Транспортная доступность</Link></li>\r\n                </ul>\r\n            </div>\r\n            <div className={s.mainContent}>\r\n                <CSSTransition\r\n                    in={true}\r\n                    timeout={1000}\r\n                    classNames={{\r\n                        appear: 'content-appear',\r\n                        appearActive: 'content-active-appear',\r\n                        enter: 'content-enter',\r\n                        enterActive: 'content-active-enter',\r\n                    }}\r\n                    appear>\r\n                    <div className={s.content}>\r\n                        <h1 className={s.title}>Безопасность</h1>\r\n                        <p className={s.description}>Современный двор европейского уровня — территория для детей, игр на свежем воздухе и вечерних</p>\r\n                    </div>\r\n                </CSSTransition>\r\n            </div>\r\n            <div className={s.illustration}>\r\n                <CSSTransition\r\n                    in={true}\r\n                    timeout={1000}\r\n                    classNames={{\r\n                        appear: 'illustration-appear',\r\n                        appearActive: 'illustration-active-appear',\r\n                        enter: 'illustration-enter',\r\n                        enterActive: 'illustration-active-enter',\r\n                    }}\r\n                    appear>\r\n                    <img src={newsPic}></img>\r\n                </CSSTransition>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\"\r\nimport s from './Navbar.module.css';\r\nimport { useParams } from \"react-router-dom\";\r\nimport classNames from 'classnames/bind';\r\n\r\nlet cx = classNames.bind(s);\r\n\r\nfunction Navbar() {\r\n\r\n    let { id } = useParams();\r\n\r\n    let className1 = cx({\r\n        navLink: true,\r\n        underline : id === 'architecture'\r\n    });\r\n    let className2 = cx({\r\n        navLink: true,\r\n        underline : id === 'emptyPage1'\r\n    });\r\n    let className3 = cx({\r\n        navLink: true,\r\n        underline : id === 'emptyPage2'\r\n    });\r\n    let className4 = cx({\r\n        navLink: true,\r\n        underline : id === 'emptyPage3'\r\n    });\r\n\r\n    return (\r\n        <div className={s.navbar}>\r\n            <div className={s.logo}>\r\n                <div className={s.backgroundBlock}></div>\r\n                <p className={s.navLinkLogo}>Первомайская</p>\r\n            </div>\r\n            <div className={s.navbuttonCenter}>\r\n            </div>\r\n            <div className={s.logo}>\r\n                <p className={s.navLinkLogo}>8 888 888 88 88</p>\r\n                <div className={s.backgroundBlock}>\r\n                    <div className={s.iconBurger}>\r\n                        <div className={s.shape1}></div>\r\n                        <div className={s.shape2}></div>\r\n                        <div className={s.shape1}></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar\r\n\r\n// import React from 'react';\r\n// import s from './EmptyPage.module.css';\r\n// import { useParams } from \"react-router-dom\";\r\n// import classNames from 'classnames/bind';\r\n\r\n// let cx = classNames.bind(s);\r\n\r\n// export default function EmptyPage() {\r\n\r\n//     let { id } = useParams();\r\n\r\n//     let className = cx({\r\n//         emptyPage1: id === 'emptyPage1',\r\n//         emptyPage2: id === 'emptyPage2',\r\n//         emptyPage3: id === 'emptyPage3'\r\n//     });\r\n\r\n//     return (\r\n//         <div className={className}>\r\n//             <div>\r\n//                 <h3>ID: {id}</h3>\r\n//             </div>\r\n//         </div >\r\n//     );\r\n// }\r\n\r\n\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\"\r\nimport s from './Footer.module.css';\r\n\r\nfunction Footer() {\r\n\r\n    return (\r\n        <div className={s.footer}>\r\n            <p className={s.footerText}>Разработано в MST &emsp; | &emsp; 2018</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer\r\n\r\n","import React from 'react';\r\nimport s from './EmptyPage.module.css';\r\nimport { useParams } from \"react-router-dom\";\r\nimport classNames from 'classnames/bind';\r\n\r\nlet cx = classNames.bind(s);\r\n\r\n\r\n\r\nexport default function EmptyPage() {\r\n\r\n    //3 точки\r\n    function _getQBezierValue(t, p1, p2, p3) {\r\n        var iT = 1 - t;\r\n        return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3;\r\n    }\r\n\r\n    //2 точки P = (1-t)P1 + tP2\r\n    // function _getQBezierValue(t, p1, p2) {\r\n    //     var iT = 1 - t;\r\n    //     return iT * p1 + t * p2;\r\n    // }\r\n\r\n    //3 точки\r\n    function getQuadraticCurvePoint(startX, startY, cpX, cpY, endX, endY, position) {\r\n        return {\r\n            x: _getQBezierValue(position, startX, cpX, endX),\r\n            y: _getQBezierValue(position, startY, cpY, endY)\r\n        };\r\n    }\r\n\r\n    //2 точки\r\n    // function getQuadraticCurvePoint(startX, startY, endX, endY, position) {\r\n    //     return {\r\n    //         x: _getQBezierValue(position, startX, endX),\r\n    //         y: _getQBezierValue(position, startY, endY)\r\n    //     };\r\n    // }\r\n\r\n    let startPointX = 100;\r\n    let startPointY = 30;\r\n    let EndPointX = 50;\r\n    let EndPointY = 100;\r\n    let controlPtX = 175;\r\n    let controlPtY = 175;\r\n\r\n    let { id } = useParams();\r\n\r\n    let className = cx({\r\n        emptyPage1: id === 'emptyPage1',\r\n        emptyPage2: id === 'emptyPage2',\r\n        emptyPage3: id === 'emptyPage3'\r\n    });\r\n\r\n    // hooks для кнопок\r\n\r\n    let i = 0\r\n\r\n    let pt1 = function () {\r\n        i = 1\r\n    }\r\n    let pt2 = function () {\r\n        i = 2\r\n    }\r\n    let pt3 = function () {\r\n        i = 3\r\n    }\r\n\r\n    let canvasField = function (event) {\r\n\r\n        //получение координат\r\n        let fieldCoords = document.getElementById('canvasField').getBoundingClientRect();\r\n        let mouseCoords = {\r\n            top: event.clientY - fieldCoords.top - document.getElementById('canvasField').clientTop,\r\n            left: event.clientX - fieldCoords.left - document.getElementById('canvasField').clientLeft\r\n        };\r\n\r\n        //задаём стартовую точку\r\n\r\n        switch (i) {\r\n            case 1:\r\n                startPointX = mouseCoords.left\r\n                startPointY = mouseCoords.top\r\n                break;\r\n            case 2:\r\n                EndPointX = mouseCoords.left\r\n                EndPointY = mouseCoords.top\r\n                break;\r\n            case 3:\r\n                controlPtX = mouseCoords.left\r\n                controlPtY = mouseCoords.top\r\n                break;\r\n        }\r\n\r\n        //создаём поле\r\n        if (document.querySelector('canvas') !== null) {\r\n            document.querySelector('canvas').remove()\r\n        }\r\n        var position = 0.0;\r\n        var startPt = { x: startPointX, y: startPointY };\r\n        var controlPt = { x: controlPtX, y: controlPtY };\r\n        var endPt = { x: EndPointX, y: EndPointY };\r\n        var canvas = document.createElement(\"canvas\");\r\n        canvas.width = canvas.height = 250;\r\n\r\n        //добавляем поле с canvas в DOM\r\n        document.getElementById('button').nextSibling.append(canvas);\r\n\r\n        //рисуем кривую \r\n        var ctx = canvas.getContext(\"2d\");\r\n\r\n        //start-end линия\r\n        ctx.beginPath()\r\n        ctx.strokeStyle = \"DarkGray\";\r\n        ctx.moveTo(startPt.x, startPt.y);\r\n        ctx.lineTo(endPt.x, endPt.y);\r\n        ctx.stroke();\r\n\r\n        //control-start линия\r\n        ctx.beginPath()\r\n        ctx.strokeStyle = \"DarkGray\";\r\n        ctx.moveTo(controlPt.x, controlPt.y);\r\n        ctx.lineTo(startPt.x, startPt.y);\r\n        ctx.stroke();\r\n\r\n        //control-end линия\r\n        ctx.beginPath()\r\n        ctx.strokeStyle = \"DarkGray\";\r\n        ctx.moveTo(controlPt.x, controlPt.y);\r\n        ctx.lineTo(endPt.x, endPt.y);\r\n        ctx.stroke();\r\n\r\n        //рисуем точки \r\n        ctx.font = \"15px Roboto\";\r\n        ctx.fillText(\"pt1\", startPointX, startPointY - 10);\r\n        ctx.fillText(\"pt2\", EndPointX, EndPointY - 10);\r\n        ctx.fillText(\"pt3\", controlPtX, controlPtY - 10);\r\n        ctx.fillRect(startPointX - 2.5, startPointY - 2.5, 5, 5)\r\n        ctx.fillRect(EndPointX - 2.5, EndPointY - 2.5, 5, 5)\r\n        ctx.fillRect(controlPtX - 2.5, controlPtY - 2.5, 5, 5)\r\n\r\n        //рисуем засечку\r\n        function drawNextPoint() {\r\n            console.log(position)\r\n            var pt = getQuadraticCurvePoint(startPt.x, startPt.y, controlPt.x, controlPt.y, endPt.x, endPt.y, position);\r\n            position = (position + 0.04) % 1.0;\r\n\r\n            ctx.fillStyle = \"rgba(255,0,0,0.5)\";\r\n            ctx.fillRect(pt.x - 1.5, pt.y - 1.5, 3, 3,);\r\n        }\r\n\r\n        //запускаем отрисовку засечек\r\n        setTimeout(function run() {\r\n            drawNextPoint();\r\n            if (position < 0.96) {\r\n                setTimeout(run, 100)\r\n            } else {\r\n                var ctx = canvas.getContext(\"2d\");\r\n                ctx.moveTo(startPt.x, startPt.y);\r\n                ctx.quadraticCurveTo(controlPt.x, controlPt.y, endPt.x, endPt.y);\r\n                ctx.stroke();\r\n            }\r\n        }, 100);\r\n    }\r\n    \r\n    let valyePt1X = startPointX\r\n    let valyePt1Y = startPointY\r\n\r\n    let valyePt2X = startPointX\r\n    let valyePt2Y = startPointY\r\n\r\n    let valyePt3X = startPointX\r\n    let valyePt3Y = startPointY\r\n\r\n    let pt1X = () => {\r\n        let fieldValue = document.getElementById('valyePt1X')\r\n        let result = document.getElementById('resultPt1X')\r\n        result.innerHTML = fieldValue.value;\r\n        startPointX = fieldValue.value\r\n    }\r\n\r\n    return (\r\n        <div className={className}>\r\n            <div className={s.id}>\r\n                <h3>ID: {id}</h3>\r\n                <button id={'button'} className={s.button} onClick={'start'} />\r\n                <div id={'canvasField'} className={s.canvasField} onClick={canvasField}></div>\r\n            </div>\r\n            <button id={'button1'} className={s.button} onClick={pt1}>pt1</button>\r\n            <button id={'button2'} className={s.button} onClick={pt2}>pt2</button>\r\n            <button id={'button3'} className={s.button} onClick={pt3}>pt3</button>\r\n            <div>\r\n                <input type=\"text\" id=\"valyePt1X\" /> <button onClick={pt1X} className={s.button} /> pt1 X: <span id=\"resultPt1X\">{valyePt1X}</span>\r\n                <input type=\"text\" id=\"input\" /> <button onClick={pt1X} className={s.button} /> pt2 Y: <span id=\"result\"></span>\r\n            </div>\r\n            <div>\r\n                <input type=\"text\" id=\"input\" /> <button onClick={pt1X} className={s.button} /> pt2 X: <span id=\"result\"></span>\r\n                <input type=\"text\" id=\"input\" /> <button onClick={pt1X} className={s.button} /> pt2 Y: <span id=\"result\"></span>\r\n            </div>\r\n            <div>\r\n                <input type=\"text\" id=\"input\" /> <button onClick={pt1X} className={s.button} /> pt3 X: <span id=\"result\"></span>\r\n                <input type=\"text\" id=\"input\" /> <button onClick={pt1X} className={s.button} /> pt3 Y: <span id=\"result\"></span>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport s from './App.module.css';\r\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\r\nimport MainPage from './components/MainPage/MainPage';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport Footer from './components/Footer/Footer';\r\nimport EmptyPage from './components/EmptyPage/EmptyPage';\r\nimport Architecture from './components/MainPage/Content/Architecture';\r\nimport Improvement from './components/MainPage/Content/Improvement';\r\nimport Security from './components/MainPage/Content/Security';\r\nimport Engineering from './components/MainPage/Content/Engineering';\r\nimport Infrastructure from './components/MainPage/Content/Infrastructure';\r\nimport Accessibility from './components/MainPage/Content/Accessibility';\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className={s.appBlock}>\r\n      <Navbar />\r\n      <Architecture />\r\n      <Improvement />\r\n      <Security />\r\n      \r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App; ","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n"],"sourceRoot":""}